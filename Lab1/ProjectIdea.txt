NourishFit – A Mobile Application for hitting your fitness and health goals1. Short DescriptionIn today's fast-paced world, maintaining a healthy lifestyle can be quite challenging. Balancing work, family, and other commitments often leaves little time for self-care. That's why I would like to create a health and fitness application designed to make the wellness journey more manageable and enjoyable.The app should be your all-in-one solution for tracking your eating habits, fitness routines, and discovering delicious and nutritious recipes. Also , motivation is the key factor for keeping clients connected to our app, so some nice message of encouragement would be nice to have. Regarding motivation , seeing how far you have come may help when feeling like giving up , so you should be able to see your past meals and track some progress . Most people don’t know how much they should eat, what types of foods  and how to train correctly for their fitness goals , so getting  the necessary calories, workouts and some ideas from the app would be great. 2. Domain Details We will focus on our application domains UserAccount : -    username – >the username chosed by our user - password – > the password of the account- fitness_goal -> the user’s goal (one of this: losing weight/ maintaining weight/ building muscle )- height -> the user’s height- current_weight  -> the user’s current weight- age -> the user’s age Diary Entry- meal_time : - breakfast -> shows the meals the user has logged in for breakfast                  - lunch -> shows the meals the user has logged in for lunch           - dinner -> shows the meals the user has logged in for dinner           - snacks : shows the meals the user has logged in for snacks                        -  food : a food from the food_list Food :             -     name -> the name of the food- quantity -> how many grams- calories -> how many calories- protein -> how much protein- carbs -> how many carbs - fat -> how much fat- creator -> if created by the user , store the username , if not , let it be “admin”Workouts:- photo: -> photo of the video- link –> link to the youtube page Receipe :- name -> name of the recipe- ingredients -> the ingredient list- nutrition -> how many calories, protein and carbs it has- directions -> how to prepare the mealReceipe cookbook ( depending on his/her fitness goals this page will show different receipes )- receipe_list[] -> list of different receipes ; when clicking a receipe the receipe details will showStart-up page : -  daily_motivation_message -> some message to encourage the user to keep going- calories –> an approximation of the calories the user should intake in order to achive his/her fitness goals- recipe_cookbook –> a clickable icon sending the user to the receipes page- workouts –> a clickable icon sending the user to the workouts page- diary – >a clickable icon sending the user to his/her diary of foods he/she has eaten             3. How the user should use it?Setting GoalsUsers set their fitness goals (e.g., lose weight) and provide personal information (height, weight, age) during the account setup.Motivation      Users receive daily motivational messages from the app, which can help maintain their commitment.      Nutrition Tracking      Users access the Recipe Cookbook to find suitable recipes for their goals.      They add these recipes to their Food Diary, tracking their daily calorie intake.      Workouts      Users browse the available workouts and follow links to related YouTube videos for exercise guidance.      Food DiaryUsers log their meals, including breakfast, lunch, dinner, and snacks. They can track their calorie intake, making sure it aligns with their daily goals.Food SelectionWhen choosing what to eat, users can refer to the "Food" section to select suitable foods based on nutritional information.4. CRUD operations    Create User Account (Create Operation)Create User Record:           When opening the app, the user will be promted to create a new account and the following fields will show up Upon the user's request to create an account, the system should initiate the creation process.Collect the following user information:      -Username: The username chosen by the user, ensuring it is unique and not already in use.     - Password: The password for the user's account     - Fitness Goal: allow the user to select their fitness goal from options like losing weight, maintaining weight, or building muscle.     -Height: store the user's height in centimeters      -Current Weight (kg): store the user's current weight in kilograms.    - Age: store the user's age.Read User Account        Profile Display:Users can view their profile information, including username, fitness goal, height, current weight, and age.They can access this information after successfully logging into their account.Update User Account (Update Operation)      Edit Profile – an edit button will be placed near user’s profile, allowing them to editFitness Goal: allowing users to modify their fitness goal.Height: allowing users to update their height.Current Weight (kg): allowing users to change their current weight.Age: allowing users to update their age.Delete User Account (Delete Operation)      Account Deletion:Users should have the option delete their account. If the user requests the deletion of their account, ensure that any associated data, such as their food diary, workout history, or recipe wish list, is removedDiary SectionCreate Operation (Add New Food to Diary)Users can add a new food item to their diary for any meal category (breakfast, lunch, dinner, or snacks).Collect the following informationFood Name: The name of the food being consumed.Quantity: The amount of the food (e.g., 100g, 1 cup).              Read Operation (View Diary)              	Users can view their diary entries for different meal categories (breakfast, lunch, dinner, snacks).      Display the food items they have logged, including food names, quantities, calories, and macronutrient      Calculate and display the total calorie intake for each meal category and the remaining calories needed to achieve the user's daily goal.                 Update Operation (Edit Diary Entry)                     	Users have the ability to edit or update existing diary entries.                     	They can change food names, quantities, or other details as needed.      Delete Operation (Remove Diary Entry)      Users can delete or remove a specific food item from their diary for a particular meal category.            Food :    Create( Add new food to the food_list)          The users can create a new food item if the one they desire isn’t in the list provided. They have to introduce the following Food Name: The name of the food being consumed.Quantity: The amount of the food (e.g., 100g, 1 cup).Calories: The calorie content of the food.Macronutrients (optional): Proteins, carbs, and fats in the food.Read Operation (View Foods)              	Display the food list Update Operation (Edit Food Entry)                     	Users have the ability to edit or update the foods they created                     	They can change food names, quantities, or other details as needed.Delete Operation (Remove Diary Entry)      Users can delete only the foods they created .      5. How the fitness data is stored- Persistence is important to our application so we want it to be connected to a local database as well as a server- For adding/ updating /deleting  a food/diary entry we want to store the changes both ways, so they would be persisted on the server and on the local database too- When the user is online, the data for listing our entities is taken from the server (so updates are reflected immediately )- When the user if offline , the temporary data is taken from the local database or saved on the local database       6. Details on what is happening when the device is offline - The application would work normally as if it would be online , except for the workout section , which won’t be able to load the youtube videos and the recipe section , as those are taken from the server- In this case , we want to develop an application which lets the user see it s diary entries, to add/remove/update a diary entry as well as creating a new food - The entities are stored in the local database - The read operation is performed on the locally saved entities- The update  operation goes for the locally saved entities- The delete operation is performed on the local database        When the application goes back online, all the changes on the local database are transmitted to the server.         